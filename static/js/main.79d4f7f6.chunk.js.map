{"version":3,"sources":["images/pencil_bg.jpg","components/QuizBank.js","components/Quiz_Styles.js","components/QuestionCard_Styles.js","components/QuestionCard.js","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QuizBank","id","question","options","answer","GlobalStyle","createGlobalStyle","BGImage","Wrapper","styled","div","ButtonWrapper","QuestionCard","this","props","questionNr","totalQuestions","callback","className","dangerouslySetInnerHTML","__html","map","option","key","value","onClick","Component","Quiz","state","userAnswer","currentQuestion","quizEnd","score","disabled","questions","answers","showAnswers","startQuiz","setState","checkAnswer","e","currentTarget","nextQuestionHandler","length","prevProps","prevState","snapshot","total_questions","item","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79d4f7f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pencil_bg.e21e8181.jpg\";","//Sample data for React Quiz App\r\nexport const QuizBank = [\r\n    {\r\n        id: 1,\r\n        question: \"How many days do we have in a week?\",\r\n        options: [\"5\",\"6\",\"7\",\"8\"],\r\n        answer: \"7\"\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"Which is the smallest continent?\",\r\n        options: [\"Australia\", \"Asia\", \"Europe\",\"America\"],\r\n        answer: \"Australia\"\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"How many letters are there in the English alphabet?\",\r\n        options: [\"25\",\"26\",\"27\",\"28\"],\r\n        answer: \"26\"\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"How many sides are there in a triangle?\",\r\n        options: [\"Two\", \"Three\", \"Four\", \"Five\"],\r\n        answer: \"Three\"\r\n    },\r\n    {\r\n        id: 5,\r\n        question: \"How many years are there in one Millenium?\",\r\n        options: [\"10 years\", \"100 years\", \"1000 years\", \"500 years\"],\r\n        answer: \"1000 years\"\r\n    },\r\n    {\r\n        id: 6,\r\n        question: \"How many primary colors are there?\",\r\n        options: [\"Three\", \"Four\", \"Five\", \"Seven\"],\r\n        answer: \"Three\"\r\n    },\r\n    {\r\n        id: 7,\r\n        question: \"How many equal sides does an isosceles triangle have?\",\r\n        options: [\"1\",\"2\",\"3\",\"4\"],\r\n        answer: \"2\"\r\n    },\r\n    {\r\n        id: 8,\r\n        question: \" Which is the longest river on the earth?\",\r\n        options: [\"Nile\", \"Yarra\", \"Ganga\", \"Amazon\"],\r\n        answer: \"Nile\"\r\n    },\r\n    {\r\n        id: 9,\r\n        question: \"How many colors are there in a rainbow?\",\r\n        options: [\"6\",\"7\",\"8\",\"9\"],\r\n        answer: \"7\"\r\n    },\r\n    {\r\n        id: 10,\r\n        question: \"Which planet is known as the Red Planet?\",\r\n        options: [\"Earth\",\"Mars\",\"Saturn\",\"Venus\"],\r\n        answer: \"Mars\"\r\n    }\r\n]\r\n\r\n//export QuizBank\r\nexport default QuizBank;","import styled, { createGlobalStyle } from 'styled-components';\r\nimport BGImage from '../images/pencil_bg.jpg';\r\n\r\n// Create a Global Style component with styles\r\nexport const GlobalStyle = createGlobalStyle`\r\n    \r\n    //Style for react quiz app\r\n    html {\r\n        height: 100%;\r\n    }\r\n    \r\n    body {\r\n        margin: 0;\r\n        justify-content: center;\r\n        background-image: url(${BGImage});\r\n        background-size: cover;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        padding: 0 20px;\r\n        display: flex;        \r\n      }\r\n      \r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Chivo', sans-serif;\r\n    }\r\n`;\r\n\r\n// Create a Wrapper component that will render an <div> tag with styles\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    > p {\r\n        color: #fff;\r\n    }\r\n    \r\n    // Style for score text\r\n    .score, .final_score {\r\n        color: #522e40;\r\n        font-size: 2rem;\r\n        margin: 0;\r\n    }\r\n    \r\n    //Style for the heading\r\n    h1 {\r\n        background-size: 100%;\r\n        background-clip: text;\r\n        font-family: 'Playfair Display', serif;\r\n        font-weight: 700;\r\n        font-style: italic;\r\n        background-image: linear-gradient(180deg, #fff, #a15a7d);\r\n        font-weight: 400;  \r\n        filter: drop-shadow(2px 2px #522e40);\r\n        font-size: 70px;\r\n        text-align: center;\r\n        margin: 20px;      \r\n        -webkit-background-clip: text;\r\n        -webkit-text-fill-color: transparent;\r\n        -moz-background-clip: text;\r\n        -moz-text-fill-color: transparent;        \r\n    }\r\n    \r\n    //Style for all buttons\r\n    .start, .next, .submit, .start_again, .show, .restart {\r\n        height: 40px;\r\n        margin: 20px 25%;\r\n        padding: 0 40px;  \r\n        cursor: pointer;\r\n        background: linear-gradient(180deg, #fff, #a3768c);\r\n        border: 2px solid #522e40;\r\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n        border-radius: 10px; \r\n        font-size: 1rem;         \r\n    }\r\n    \r\n    .next, .submit {\r\n        margin: 20px 30%\r\n    }\r\n    \r\n    .start {\r\n        max-width: 200px;\r\n    }\r\n    \r\n    .start_again, .show {\r\n        margin: 30px 5px;\r\n        width: 200px;\r\n        height:50px;\r\n    }\r\n    \r\n    .restart{\r\n       margin: 20px 42%; \r\n    }\r\n    \r\n    //Style for answers at the end\r\n    .answers {        \r\n        font-size: 1rem;\r\n        width: 100%;\r\n        height: 40px;\r\n        margin: 5px 0;\r\n        background: linear-gradient(90deg, #a3768c, #522e40);\r\n        border: 3px solid #ffffff;\r\n        box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n        border-radius: 10px;\r\n        color: #fff;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n        max-width: 500px;\r\n        margin: 10px 30px 0 60px;\r\n        text-align: center;\r\n    }\r\n    \r\n    //Style for msg print on last page\r\n    .msg {\r\n        color: #522e40;\r\n        font-size: 1.5rem;\r\n        margin: 0 55px;\r\n    }\r\n    \r\n    .final_score {\r\n        margin: 0 55px;\r\n    }\r\n    \r\n    // Style for fixed footer\r\n    .footer {\r\n        position: fixed;\r\n        left: 0;\r\n        bottom: 0;\r\n        width: 100%;\r\n        background-color: #000;\r\n        color: #fff;\r\n        text-align: center;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\n// Create a Wrapper component that'll render an <div> tag with styles\r\nexport const Wrapper = styled.div`    \r\n    background: #dbd3d7;\r\n    border-radius: 10px;\r\n    border: 2px solid #522e40;\r\n    padding: 20px;\r\n    max-width: 1100px;\r\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n    text-align: center;\r\n    \r\n    p {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\n// Create a ButtonWrapper component that'll render an <div> tag with styles\r\nexport const ButtonWrapper = styled.div`\r\n    transition: all 0.3s ease;\r\n    \r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n  \r\n    //  Style for option's button\r\n    button {        \r\n        font-size: 1rem;\r\n        margin: 5px 0;\r\n        width: 100%;\r\n        height: 40px;\r\n        color: #fff;\r\n        border: 3px solid #ffffff;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n        background: linear-gradient(90deg, #a3768c, #522e40);        \r\n        text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n    }\r\n`;","//import statement\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper, ButtonWrapper } from './QuestionCard_Styles';\r\n\r\n//Quiz Component which extends the functionality of Component\r\nclass QuestionCard extends Component {\r\n    render() {\r\n        //Get the value from Quiz using props\r\n        const {questionNr, totalQuestions, question, options, callback} = this.props;\r\n        return (\r\n                <div>\r\n                    {/*Styled Component*/}\r\n                    <Wrapper>\r\n                        <p className=\"number\">\r\n                            Question: {questionNr} / {totalQuestions}\r\n                        </p>\r\n                        <p dangerouslySetInnerHTML={{__html: question}} />\r\n                        <div>\r\n                            {/*Iterate over all options of question*/}\r\n                            {options.map(option => (\r\n                                //Styled Component\r\n                                <ButtonWrapper key={option}>\r\n                                    <button value={option} onClick={callback}>\r\n                                        <span  dangerouslySetInnerHTML={{ __html: option }}/>\r\n                                    </button>\r\n                                </ButtonWrapper>\r\n                            ))}\r\n                        </div>\r\n                    </Wrapper>\r\n                </div>\r\n        );\r\n    };\r\n}\r\n\r\n//Type Checking of props\r\nQuestionCard.propTypes = {\r\n    questionNr: PropTypes.number.isRequired,\r\n    totalQuestions: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    callback: PropTypes.func.isRequired\r\n}\r\n\r\n//export QuestionCard\r\nexport default QuestionCard;\r\n","//import statements\r\nimport React, {Component} from 'react';\r\n\r\nimport {QuizBank} from \"./QuizBank\";\r\nimport { GlobalStyle, Wrapper } from './Quiz_Styles';\r\nimport QuestionCard from \"./QuestionCard\";\r\n\r\n//Quiz Component which extends the functionality of Component\r\nclass Quiz extends Component {\r\n    //Declaration of states\r\n    state = {\r\n        userAnswer: null,\r\n        currentQuestion: 0,\r\n        options: [],\r\n        quizEnd: true,\r\n        score: 0,\r\n        disabled: true,\r\n        questions: null,\r\n        answers: null,\r\n        showAnswers: false\r\n    }\r\n\r\n    // Initialize the values and fetch the first question\r\n    startQuiz = () => {\r\n        this.setState({\r\n            quizEnd: false,\r\n            currentQuestion: 0,\r\n            score: 0,\r\n            showAnswers: false\r\n        })\r\n        const {currentQuestion} = this.state;\r\n        this.setState(() => {\r\n            return {\r\n                questions: QuizBank[currentQuestion].question,\r\n                options: QuizBank[currentQuestion].options,\r\n                answers: QuizBank[currentQuestion].answer,\r\n            }\r\n        })\r\n    }\r\n\r\n    //Get the user selected option and enable the \"Next\" button\r\n    checkAnswer = (e) => {\r\n        this.setState({\r\n            userAnswer: e.currentTarget.value,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n    //Functionality for \"Next\" and \"Submit\" Button\r\n    nextQuestionHandler = () => {\r\n        const {userAnswer, answers, score} = this.state\r\n        //If its last question then end the quiz otherwise increment the index\r\n        if(this.state.currentQuestion === QuizBank.length - 1) {\r\n            this.setState({\r\n                quizEnd: true\r\n            })\r\n        }\r\n        else {\r\n        this.setState({\r\n            currentQuestion: this.state.currentQuestion + 1\r\n        })}\r\n\r\n        // increment the score if answer is correct\r\n        if (userAnswer ===  answers) {\r\n            this.setState({\r\n                score: score + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    // update the component\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const {currentQuestion} = this.state;\r\n        if (this.state.currentQuestion !== prevState.currentQuestion) {\r\n            this.setState(() => {\r\n                return {\r\n                    disabled: true,\r\n                    questions: QuizBank[currentQuestion].question,\r\n                    options: QuizBank[currentQuestion].options,\r\n                    answers: QuizBank[currentQuestion].answer,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //get the value from the state\r\n        const {questions, options, currentQuestion, quizEnd, score, showAnswers} = this.state;\r\n        const total_questions = QuizBank.length\r\n        return (\r\n              <>\r\n                  {/*Styled Components*/}\r\n                  <GlobalStyle />\r\n                    <Wrapper>\r\n                        <div className=\"Quiz\">\r\n                            <h1>Trial Quiz</h1>\r\n\r\n                            {/*Start the new game*/}\r\n                            {quizEnd && !(currentQuestion === total_questions - 1) ?\r\n                                <button className=\"start\" onClick={this.startQuiz}>Start</button>\r\n                            : null}\r\n\r\n                            {/*Print the score*/}\r\n                            {!quizEnd ? <p className=\"score\">Score: {score}</p> : null}\r\n\r\n                            {/*Print the Question through QuestionCard Component*/}\r\n                            {!quizEnd &&\r\n                                <QuestionCard\r\n                                    questionNr={currentQuestion + 1}\r\n                                    totalQuestions={total_questions}\r\n                                    question={questions}\r\n                                    options={options}\r\n                                    callback={this.checkAnswer}\r\n                                />\r\n                            }\r\n\r\n                            {/*Next Button functionality*/}\r\n                            {!quizEnd && currentQuestion < total_questions - 1 &&\r\n                                <button className='next' disabled={this.state.disabled}\r\n                                        onClick={this.nextQuestionHandler}>\r\n                                        Next\r\n                                </button>}\r\n\r\n                            {/*Submit Button Functionality*/}\r\n                            {!quizEnd && currentQuestion === total_questions - 1 &&\r\n                                <button className='submit' disabled={this.state.disabled}\r\n                                        onClick={this.nextQuestionHandler}>\r\n                                        Submit\r\n                                </button>\r\n                            }\r\n\r\n                            {/*Show Final score and options for Start Again or Show Answers*/}\r\n                            {quizEnd && currentQuestion === total_questions - 1 && !showAnswers ?\r\n                                <div>\r\n                                    <p className=\"final_score\">Final Score: {score}/{total_questions}</p>\r\n                                    <button className=\"show\" onClick={() => this.setState({\r\n                                        showAnswers: true\r\n                                    })}>Show Answers\r\n                                    </button>\r\n                                    <button className=\"start_again\" onClick={this.startQuiz}>Start Again</button>\r\n                                </div> : null\r\n                            }\r\n\r\n                            {/*Show the final score, respective correct answers and button to start again the quiz*/}\r\n                            {quizEnd && currentQuestion === total_questions - 1 && showAnswers ?\r\n                                <div>\r\n                                    <p className=\"final_score\">Final Score: {score}/{total_questions}</p>\r\n                                        <div>\r\n                                            <p className=\"msg\"> The correct Answers for the Questions are:</p>\r\n                                            {QuizBank.map((item, index) => (\r\n                                                <button key={index} className=\"answers\" value={item.answer} disabled={true}>\r\n                                                    <span> {item.id}.{item.question}  {item.answer} </span>\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    <button className=\"restart\" onClick={this.startQuiz}>Start Again</button>\r\n                                </div>  : null\r\n                            }\r\n\r\n                            {/*Show the footer*/}\r\n                            <div className=\"footer\">By Megha Bisani</div>\r\n                        </div>\r\n                    </Wrapper>\r\n              </>\r\n        )\r\n    }\r\n}\r\n\r\n//export Quiz\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport Quiz from \"./components/Quiz\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        {/*Quiz Components*/}\r\n        <Quiz />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}